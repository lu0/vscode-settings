// this key bindings overwrite the defaults
[
        {
                "key": "ctrl+N",
                "command": "workbench.action.files.newUntitledFile"
        },
        {
                "key": "ctrl+shift+N",
                "command": "workbench.action.newWindow"
        },
        {
                "key": "ctrl+O ctrl+O",
                "command": "workbench.action.files.openFile"
        },
        {
                "key": "ctrl+O ctrl+F",
                "command": "workbench.action.files.openFolder"
        },
        {
                "key": "ctrl+O ctrl+Space",
                "command": "workbench.action.closeFolder"
        },
        {
                "key": "ctrl+O ctrl+W",
                "command": "workbench.action.openWorkspace"
        },
        {
                "key": "ctrl+[Backquote] ctrl+s",
                "command": "workbench.action.files.save"
        },
        {
                "key": "ctrl+s",
                "command": "workbench.action.files.saveWithoutFormatting"
        },
        {
                "key": "ctrl+shift+S",
                "command": "workbench.action.files.saveAs"
        },
        {
                "key": "ctrl+meta+s",
                "command": "workbench.action.files.saveAll"
        },
        {
                "key": "ctrl+[Backquote] X",
                "command": "workbench.view.extensions"
        },
        {
                "key": "ctrl+[Backquote] s",
                "command": "workbench.action.openSettings"
        },
        {
                "key": "ctrl+[Backquote] ctrl+k",
                "command": "workbench.action.openGlobalKeybindings"
        },
        {
                "key": "ctrl+U",
                "command": "cursorUndo",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+Z",
                "command": "undo"
        },
        {
                "key": "ctrl+shift+Z",
                "command": "redo"
        },
        {
                "key": "ctrl+Y",
                "command": "redo"
        },
        {
                "key": "ctrl+X",
                "command": "editor.action.clipboardCutAction"
        },
        {
                "key": "ctrl+C",
                "command": "editor.action.clipboardCopyAction"
        },
        {
                "key": "ctrl+V",
                "command": "editor.action.clipboardPasteAction"
        },
        {
                "key": "ctrl+F",
                "command": "actions.find"
        },
        {
                "key": "ctrl+[Backquote] F",
                "command": "workbench.action.findInFiles"
        },
        {
                "key": "ctrl+[Backquote] ctrl+H",
                "command": "editor.action.changeAll",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+[Backquote] ctrl+c",
                "command": "editor.action.commentLine"
        },
        {
                "key": "ctrl+[Backquote] ctrl+shift+c",
                "command": "editor.action.blockComment"
        },
        {
                "key": "ctrl+A",
                "command": "editor.action.selectAll"
        },
        {
                "key": "ctrl+Alt+Up",
                "command": "editor.action.copyLinesUpAction"
        },
        {
                "key": "ctrl+Alt+Down",
                "command": "editor.action.copyLinesDownAction"
        },
        {
                "key": "ctrl+meta+Up",
                "command": "editor.action.moveLinesUpAction"
        },
        {
                "key": "ctrl+meta+Down",
                "command": "editor.action.moveLinesDownAction"
        },
        {
                "key": "ctrl+[Backquote] Z",
                "command": "workbench.action.toggleZenMode"
        },
        { 
                "key": "ctrl+[Backquote] ctrl+A", 
                "command": "workbench.action.toggleSidebarVisibility"
        },
        { 
                "key": "ctrl+[Backquote] A", 
                "command": "workbench.action.toggleSidebarVisibility"
        },
        { 
                "key": "ctrl+[Backquote] ctrl+Escape", 
                "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
                "key": "ctrl+=",
                "command": "workbench.action.zoomIn"
        },
        {
                "key": "ctrl+[",
                "command": "workbench.action.zoomOut"
        },
        {
                "key": "ctrl+0",
                "command": "workbench.action.zoomReset"
        },
        {
                "key": "ctrl+[Backquote] L",
                "command": "workbench.action.toggleEditorGroupLayout"
        },
        {
                "key": "ctrl+[Backquote] E",
                "command": "workbench.view.explorer"
        },
        {
                "key": "ctrl+[Backquote] G",
                "command": "workbench.view.scm"
        },
        {
                "key": "ctrl+[Backquote] T",
                "command": "workbench.view.extension.test"
        },
        // {
        //         "key": "ctrl+[Backquote] ctrl+D",
        //         "command": "workbench.debug.action.toggleRepl"
        // },
        {
                "key": "alt+shift+E",
                "command": "workbench.debug.action.toggleRepl"
        },
        {
                "key": "ctrl+[Backquote] ctrl+P",
                "command": "workbench.actions.view.problems"
        },
        {
                "key": "shift+alt+o",
                "command": "workbench.action.output.toggleOutput"
        },
        {
                "key": "ctrl+[Backquote] ctrl+W",
                "command": "editor.action.toggleWordWrap"
        },
        {
                "key": "ctrl+[Backquote] ctrl+E",
                "command": "workbench.action.navigateToLastEditLocation"
        },
        {
                "key": "ctrl+Space",
                "command": "workbench.action.closeActiveEditor"
        },
        {
                "key": "ctrl+shift+Space",
                "command": "workbench.action.reopenClosedEditor"
        },
        {
                "key": "shift+Alt+S",
                "command": "workbench.action.nextEditorInGroup"
        },
        {
                "key": "shift+Alt+A",
                "command": "workbench.action.previousEditorInGroup"
        },
        {
                "key": "ctrl+[Backquote] ctrl+F",
                "command": "workbench.action.quickOpen"
        },
        {
                "key": "ctrl+[Backquote] ctrl+R",
                "command": "code-runner.run"
        },
        {
                "key": "ctrl+[Backquote] ctrl+L",
                "command": "workbench.action.gotoLine"
        },
        {
                "key": "ctrl+` ctrl+'",
                "command": "editor.action.jumpToBracket"
        },
        {
                "key": "ctrl+[Backquote] alt+K",
                "command": "workbench.action.keybindingsReference"
        },
        {
                "key": "ctrl+alt+T",
                "command": "workbench.action.terminal.new"
        },
        {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.kill",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+space",
                "command": "workbench.action.terminal.split",
                "when": "terminalFocus"
        },
        {
                "key": "shift+alt+S",
                "command": "workbench.action.terminal.focusNextPane",
                "when": "terminalFocus"
        },
        {
                "key": "shift+alt+A",
                "command": "workbench.action.terminal.focusPreviousPane",
                "when": "terminalFocus"
        },
        {
                "key": "shift+alt+Z",
                "command": "workbench.action.previousPanelView",
                "when": "panelFocus"
        },
        {
                "key": "shift+alt+X",
                "command": "workbench.action.nextPanelView",
                "when": "panelFocus"
        },
        {
                "key": "ctrl+[Backquote] ctrl+x",
                "command": "workbench.action.toggleMaximizedPanel"
        },
        {
                "key": "ctrl+r",
                "command": "editor.action.startFindReplaceAction"
        },
        {
                "key": "shift+alt+Z",
                "command": "workbench.action.focusLeftGroup",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+X",
                "command": "workbench.action.focusRightGroup",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+meta+A",
                "command": "workbench.action.moveEditorLeftInGroup"
        },
        {
                "key": "shift+meta+S",
                "command": "workbench.action.moveEditorRightInGroup"
        },
        {
                "key": "shift+meta+z",
                "command": "workbench.action.moveEditorToPreviousGroup"
        },
        {
                "key": "shift+meta+x",
                "command": "workbench.action.moveEditorToNextGroup"
        },
        {
                "key": "alt+shift+Q",
                "command": "workbench.action.focusActiveEditorGroup"
        },
        {
                "key": "alt+shift+W",
                "command": "workbench.action.terminal.focus"
        },
        {
                "key": "ctrl+[Backquote] ctrl+t",
                "command": "workbench.action.terminal.toggleTerminal"
        },
        {
                "key": "ctrl+[Backquote] ctrl+[Backquote]",
                "command": "workbench.action.togglePanel"
        },
        {
                "key": "alt+v",
                "command": "workbench.action.splitEditor"
        },
        {
                "key": "ctrl+[Backquote] ctrl+space",
                "command": "workbench.action.closeEditorsAndGroup"
        },
        {
                "key": "shift+Tab",
                "command": "editor.action.outdentLines",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+enter",
                "command": "editor.action.insertLineBefore",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+enter",
                "command": "editor.action.insertLineAfter",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+meta+r",
                "command": "workbench.action.reloadWindow"
        },
        {
                "key": "ctrl+shift+l",
                "command": "editor.action.selectHighlights",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+l",
                "command": "expandLineSelection",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+l",
                "command": "workbench.debug.panel.action.clearReplAction",
                "when": "inDebugRepl"
        },
        {
                "key": "ctrl+delete",
                "command": "workbench.action.searchEditor.deleteResultBlock",
                "when": "inSearchEditor"
        },
        {
                "key": "ctrl+d",
                "command": "editor.action.deleteLines",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "shift+meta+up",
                "command": "editor.action.insertCursorAbove",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+meta+down",
                "command": "editor.action.insertCursorBelow",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+` k",
                "command": "keybindings.editor.recordSearchKeys",
                "when": "inKeybindings && inKeybindingsSearch"
        },
        {
                "key": "ctrl+` d",
                "command": "workbench.view.debug"
        },
        {
                "key": "ctrl+` meta+d",
                "command": "workbench.action.debug.start"
        },
        {
                "key": "ctrl+` ctrl+shift+d",
                "command": "workbench.action.debug.stop"
        },
        {
                "key": "ctrl+` ctrl+meta+d",
                "command": "workbench.action.debug.restart"
        },
        {
                "key": "ctrl+` ctrl+b",
                "command": "editor.debug.action.toggleBreakpoint",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+` ctrl+shift+b",
                "command": "editor.debug.action.goToNextBreakpoint"
        },
        {
                "key": "ctrl+shift+b",
                "command": "workbench.action.debug.stepOver"
        },
        {
                "key": "ctrl+` ctrl+s",
                "command": "-workbench.action.toggleMenuBar"
        },
        {
                "key": "ctrl+shift+r",
                "command": "workbench.action.replaceInFiles"
        },
        {
                "key": "ctrl+` ctrl+v",
                "command": "browser-preview.openActiveFile"
        },
        {
                "key": "ctrl+` ctrl+v",
                "command": "extension.liveServer.goOnline",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+` ctrl+shift+l",
                "command": "workbench.action.editor.changeLanguageMode"
        },
        {
                "key": "ctrl+` ctrl+q",
                "command": "workbench.action.showCommands"
        },
        {
                "key": "ctrl+delete",
                "command": "deleteWordRight"
        },
        {
                "key": "ctrl+[Backquote] ctrl+m",
                "command": "markdown.showPreviewToSide",
                "when": "!notebookEditorFocused && editorLangId == 'markdown'"
        },
        {
                "key": "ctrl+` ctrl+n",
                "command": "notifications.focusToasts"
        },
        {
                "key": "backspace",
                "command": "notification.clear",
                "when": "notificationFocus"
        },
        {
                "key": "ctrl+` ctrl+shift+n",
                "command": "notifications.showList"
        },
        {
                "key": "ctrl+` ctrl+shift+n",
                "command": "notifications.hideList"
        },
        {
                "key": "ctrl+b ctrl+b",
                "command": "bookmarks.toggle",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+b ctrl+down",
                "command": "bookmarks.jumpToNext",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+b ctrl+up",
                "command": "bookmarks.jumpToPrevious",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+` b",
                "command": "bookmarksExplorer.focus"
        },
        {
                "key": "ctrl+[Backquote] S",
                "command": "-workbench.view.extension.objectExplorer"
        },
        {
                "key": "ctrl+shift+H",
                "command": "-workbench.action.replaceInFiles"
        },        
        {
                "key": "ctrl+shift+j",
                "command": "-workbench.action.search.toggleQueryDetails",
                "when": "inSearchEditor || searchViewletFocus"
        },
        {
                "key": "ctrl+shift+k",
                "command": "-editor.action.deleteLines",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+l",
                "command": "-addCursorsAtSearchResults",
                "when": "fileMatchOrMatchFocus && searchViewletVisible"
        },
        {
                "key": "ctrl+shift+l",
                "command": "-selectAllSearchEditorMatches",
                "when": "inSearchEditor"
        },
        {
                "key": "ctrl+j",
                "command": "-workbench.action.togglePanel"
        },
        {
                "key": "ctrl+shift+`",
                "command": "-workbench.action.terminal.new"
        },
        {
                "key": "ctrl+[",
                "command": "-editor.action.outdentLines",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+[Backquote]",
                "command": "-workbench.action.terminal.toggleTerminal"
        },
        {
                "key": "ctrl+shift+up",
                "command": "-editor.action.insertCursorAbove",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+shift+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+i",
                "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+c",
                "command": "-editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+d",
                "command": "-editor.action.addSelectionToNextFindMatch",
                "when": "editorFocus"
        },
        {
                "key": "shift+alt+.",
                "command": "-editor.action.autoFix",
                "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
                "key": "shift+alt+h",
                "command": "-references-view.showCallHierarchy",
                "when": "editorHasCallHierarchyProvider"
        },
        {
                "key": "ctrl+f2",
                "command": "-editor.action.changeAll",
                "when": "editorTextFocus && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k m",
                "command": "-workbench.action.editor.changeLanguageMode"
        },
        {
                "key": "ctrl+shift+w",
                "command": "-workbench.action.closeWindow"
        },
        {
                "key": "ctrl+w",
                "command": "-workbench.action.closeWindow",
                "when": "!editorIsOpen && !multipleEditorGroups"
        },
        {
                "key": "ctrl+shift+alt+down",
                "command": "-editor.action.copyLinesDownAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+alt+up",
                "command": "-editor.action.copyLinesUpAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+u",
                "command": "-cursorUndo",
                "when": "textInputFocus"
        },
        {
                "key": "f5",
                "command": "-workbench.action.debug.continue",
                "when": "inDebugMode"
        },
        {
                "key": "shift+f9",
                "command": "-editor.debug.action.toggleInlineBreakpoint",
                "when": "editorTextFocus"
        },
        {
                "key": "f6",
                "command": "-workbench.action.debug.pause",
                "when": "debugState == 'running'"
        },
        {
                "key": "ctrl+shift+f5",
                "command": "-workbench.action.debug.restart",
                "when": "inDebugMode"
        },
        {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode"
        },
        {
                "key": "f5",
                "command": "-workbench.action.debug.start",
                "when": "!inDebugMode"
        },
        {
                "key": "f10",
                "command": "-extension.node-debug.startWithStopOnEntry",
                "when": "!inDebugMode && debugConfigurationType == 'node'"
        },
        {
                "key": "f11",
                "command": "-workbench.action.debug.stepInto",
                "when": "debugState != 'inactive'"
        },
        {
                "key": "shift+f11",
                "command": "-workbench.action.debug.stepOut",
                "when": "debugState == 'stopped'"
        },
        {
                "key": "f10",
                "command": "-workbench.action.debug.stepOver",
                "when": "debugState == 'stopped'"
        },
        {
                "key": "shift+f5",
                "command": "-workbench.action.debug.stop",
                "when": "inDebugMode"
        },
        {
                "key": "ctrl+k o",
                "command": "-workbench.action.files.showOpenedFileInNewWindow"
        },
        {
                "key": "ctrl+alt+r",
                "command": "-revealFileInOS",
                "when": "!editorFocus"
        },
        {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFile"
        },
        {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openFolder"
        },
        {
                "key": "ctrl+r",
                "command": "-workbench.action.openRecent"
        },
        {
                "key": "ctrl+k s",
                "command": "-workbench.action.files.saveWithoutFormatting"
        },
        {
                "key": "f3",
                "command": "-editor.action.nextMatchFindAction",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+f3",
                "command": "-editor.action.nextSelectionMatchFindAction",
                "when": "editorFocus"
        },
        {
                "key": "shift+f3",
                "command": "-editor.action.previousMatchFindAction",
                "when": "editorFocus"
        },
        {
                "key": "shift+enter",
                "command": "-editor.action.previousMatchFindAction",
                "when": "editorFocus && findInputFocussed"
        },
        {
                "key": "ctrl+shift+f3",
                "command": "-editor.action.previousSelectionMatchFindAction",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+shift+.",
                "command": "-breadcrumbs.focusAndSelect",
                "when": "breadcrumbsPossible"
        },
        {
                "key": "ctrl+shift+[",
                "command": "-editor.fold",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+0",
                "command": "-editor.foldAll",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+/",
                "command": "-editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+1",
                "command": "-editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+2",
                "command": "-editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+3",
                "command": "-editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+4",
                "command": "-editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+5",
                "command": "-editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+6",
                "command": "-editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+7",
                "command": "-editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+[",
                "command": "-editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+shift+i",
                "command": "-editor.action.formatDocument",
                "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+i",
                "command": "-editor.action.formatDocument.none",
                "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
        },
        {
                "key": "ctrl+k ctrl+f",
                "command": "-editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+alt+-",
                "command": "-workbench.action.navigateBack"
        },
        {
                "key": "ctrl+shift+-",
                "command": "-workbench.action.navigateForward"
        },
        {
                "key": "ctrl+shift+\\",
                "command": "-editor.action.jumpToBracket",
                "when": "editorTextFocus"
        },
        {
                "key": "f12",
                "command": "-editor.action.revealDefinition",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpen"
        },
        {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpen"
        },
        {
                "key": "ctrl+f12",
                "command": "-editor.action.goToImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+k ctrl+q",
                "command": "-workbench.action.navigateToLastEditLocation"
        },
        {
                "key": "ctrl+g",
                "command": "-workbench.action.gotoLine"
        },
        {
                "key": "f7",
                "command": "-editor.action.diffReview.next",
                "when": "isInDiffEditor"
        },
        {
                "key": "alt+f8",
                "command": "-editor.action.marker.next",
                "when": "editorFocus && !editorReadonly"
        },
        {
                "key": "f8",
                "command": "-editor.action.marker.nextInFiles",
                "when": "editorFocus && !editorReadonly"
        },
        {
                "key": "f7",
                "command": "-editor.action.wordHighlight.next",
                "when": "editorTextFocus && hasWordHighlights"
        },
        {
                "key": "shift+f7",
                "command": "-editor.action.diffReview.prev",
                "when": "isInDiffEditor"
        },
        {
                "key": "shift+alt+f8",
                "command": "-editor.action.marker.prev",
                "when": "editorFocus && !editorReadonly"
        },
        {
                "key": "shift+f8",
                "command": "-editor.action.marker.prevInFiles",
                "when": "editorFocus && !editorReadonly"
        },
        {
                "key": "shift+f7",
                "command": "-editor.action.wordHighlight.prev",
                "when": "editorTextFocus && hasWordHighlights"
        },
        {
                "key": "shift+f12",
                "command": "-editor.action.goToReferences",
                "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+o",
                "command": "-workbench.action.gotoSymbol"
        },
        {
                "key": "ctrl+t",
                "command": "-workbench.action.showAllSymbols"
        },
        {
                "key": "ctrl+k ctrl+r",
                "command": "-workbench.action.keybindingsReference"
        },
        {
                "key": "ctrl+]",
                "command": "-editor.action.indentLines",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+enter",
                "command": "-editor.action.insertLineAfter",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "shift+alt+b",
                "command": "-java.workspace.compile"
        },
        {
                "key": "shift+alt+u",
                "command": "-java.projectConfiguration.update",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+shift+v",
                "command": "-markdown.showPreview",
                "when": "editorLangId == 'markdown'"
        },
        {
                "key": "ctrl+k v",
                "command": "-markdown.showPreviewToSide",
                "when": "editorLangId == 'markdown'"
        },
        {
                "key": "ctrl+k ctrl+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus"
        },
        {
                "key": "alt+down",
                "command": "-editor.action.moveLinesDownAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "alt+up",
                "command": "-editor.action.moveLinesUpAction",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "alt+f5",
                "command": "-workbench.action.editor.nextChange",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+f5",
                "command": "-workbench.action.editor.previousChange",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+shift+c",
                "command": "-mssql.connect",
                "when": "editorTextFocus && editorLangId == 'sql'"
        },
        {
                "key": "ctrl+shift+d",
                "command": "-mssql.disconnect",
                "when": "editorTextFocus && editorLangId == 'sql'"
        },
        {
                "key": "ctrl+shift+e",
                "command": "-mssql.runQuery",
                "when": "editorTextFocus && editorLangId == 'sql'"
        },
        {
                "key": "ctrl+shift+n",
                "command": "-workbench.action.newWindow"
        },
        {
                "key": "meta+enter",
                "command": "-workbench.notebook.cell.execute",
                "when": "inputFocus && notebookEditorFocused"
        },
        {
                "key": "escape",
                "command": "-notifications.hideList",
                "when": "notificationCenterVisible"
        },
        {
                "key": "ctrl+shift+f2",
                "command": "-editor.action.onTypeRename",
                "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.openNativeConsole",
                "when": "!terminalFocus"
        },
        {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.openNativeConsole",
                "when": "!terminalFocus"
        },
        {
                "key": "shift+alt+o",
                "command": "-editor.action.organizeImports",
                "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
        },
        {
                "key": "shift+insert",
                "command": "-editor.action.clipboardPasteAction",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "shift+alt+h",
                "command": "-editor.showCallHierarchy",
                "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
        },
        {
                "key": "ctrl+shift+f10",
                "command": "-editor.action.peekDefinition",
                "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+shift+f12",
                "command": "-editor.action.peekImplementation",
                "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+k ctrl+t",
                "command": "-workbench.action.selectTheme"
        },
        {
                "key": "ctrl+k ctrl+m",
                "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
        },
        {
                "key": "ctrl+k ctrl+s",
                "command": "-workbench.action.openGlobalKeybindings"
        },
        {
                "key": "ctrl+enter",
                "command": "-python.datascience.runcurrentcell",
                "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection"
        },
        {
                "key": "shift+enter",
                "command": "-python.datascience.runcurrentcelladvance",
                "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection"
        },
        {
                "key": "shift+enter",
                "command": "-python.datascience.execSelectionInteractive",
                "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
        },
        {
                "key": "shift+enter",
                "command": "-python.execSelectionInTerminal",
                "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
        },
        {
                "key": "ctrl+shift+z",
                "command": "-redo",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+y",
                "command": "-redo",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+r",
                "command": "-editor.action.refactor",
                "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "shift+alt+f12",
                "command": "-references-view.find",
                "when": "editorHasReferenceProvider"
        },
        {
                "key": "shift+enter",
                "command": "-editor.refocusCallHierarchy",
                "when": "callHierarchyVisible"
        },
        {
                "key": "ctrl+k ctrl+u",
                "command": "-editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "f2",
                "command": "-editor.action.rename",
                "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+f",
                "command": "-repl.action.filter",
                "when": "inDebugRepl && textInputFocus"
        },
        {
                "key": "ctrl+h",
                "command": "-editor.action.startFindReplaceAction"
        },
        {
                "key": "ctrl+shift+.",
                "command": "-editor.action.inPlaceReplace.down",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+,",
                "command": "-editor.action.inPlaceReplace.up",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+f5",
                "command": "-workbench.action.debug.run"
        },
        {
                "key": "ctrl+shift+f",
                "command": "-workbench.action.findInFiles"
        },
        {
                "key": "f4",
                "command": "-search.action.focusNextSearchResult",
                "when": "hasSearchResult || inSearchEditor"
        },
        {
                "key": "shift+f4",
                "command": "-search.action.focusPreviousSearchResult",
                "when": "hasSearchResult || inSearchEditor"
        },
        {
                "key": "alt+f1",
                "command": "-editor.action.showAccessibilityHelp",
                "when": "editorFocus"
        },
        {
                "key": "shift+alt+f1",
                "command": "-editor.action.showAccessibilityHelp",
                "when": "editorFocus"
        },
        {
                "key": "f1",
                "command": "-workbench.action.showCommands"
        },
        {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.showCommands"
        },
        {
                "key": "shift+f10",
                "command": "-editor.action.showContextMenu",
                "when": "textInputFocus"
        },
        {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.action.showHover",
                "when": "editorTextFocus"
        },
        {
                "key": "alt+f3",
                "command": "-editor.action.dirtydiff.next",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+f3",
                "command": "-editor.action.dirtydiff.previous",
                "when": "editorTextFocus"
        },
        {
                "key": "shift+alt+left",
                "command": "-editor.action.smartSelect.shrink",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+shift+b",
                "command": "-workbench.action.tasks.build"
        },
        {
                "key": "ctrl+shift+`",
                "command": "-workbench.action.terminal.new"
        },
        {
                "key": "f3",
                "command": "-workbench.action.terminal.findNext",
                "when": "terminalFocus"
        },
        {
                "key": "f3",
                "command": "-workbench.action.terminal.findNext",
                "when": "terminalFindWidgetFocused"
        },
        {
                "key": "shift+f3",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "terminalFocus"
        },
        {
                "key": "shift+f3",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "terminalFindWidgetFocused"
        },
        {
                "key": "alt+down",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+right",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+up",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "terminalFocus"
        },
        {
                "key": "alt+left",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "terminalFocus"
        },
        {
                "key": "shift+escape",
                "command": "-workbench.action.terminal.hideFindWidget",
                "when": "terminalFindWidgetVisible && terminalFocus"
        },
        {
                "key": "ctrl+shift+left",
                "command": "-workbench.action.terminal.resizePaneLeft",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+down",
                "command": "-workbench.action.terminal.scrollDown",
                "when": "terminalFocus"
        },
        {
                "key": "shift+pagedown",
                "command": "-workbench.action.terminal.scrollDownPage",
                "when": "terminalFocus"
        },
        {
                "key": "shift+end",
                "command": "-workbench.action.terminal.scrollToBottom",
                "when": "terminalFocus"
        },
        {
                "key": "shift+home",
                "command": "-workbench.action.terminal.scrollToTop",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+up",
                "command": "-workbench.action.terminal.scrollUp",
                "when": "terminalFocus"
        },
        {
                "key": "shift+pageup",
                "command": "-workbench.action.terminal.scrollUpPage",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.split",
                "when": "terminalFocus"
        },
        {
                "key": "alt+c",
                "command": "-workbench.action.terminal.toggleFindCaseSensitive",
                "when": "terminalFindWidgetFocused || terminalFocus"
        },
        {
                "key": "alt+r",
                "command": "-workbench.action.terminal.toggleFindRegex",
                "when": "terminalFindWidgetFocused || terminalFocus"
        },
        {
                "key": "alt+w",
                "command": "-workbench.action.terminal.toggleFindWholeWord",
                "when": "terminalFindWidgetFocused || terminalFocus"
        },
        {
                "key": "ctrl+shift+a",
                "command": "-editor.action.blockComment",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "shift+alt+h",
                "command": "-editor.toggleCallHierarchy",
                "when": "callHierarchyVisible"
        },
        {
                "key": "ctrl+k ctrl+l",
                "command": "-editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+/",
                "command": "-editor.action.commentLine",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+m",
                "command": "-editor.action.toggleTabFocusMode"
        },
        {
                "key": "ctrl+shift+space",
                "command": "-editor.action.triggerParameterHints",
                "when": "editorHasSignatureHelpProvider && editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+shift+]",
                "command": "-editor.unfold",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+j",
                "command": "-editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+]",
                "command": "-editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+shift+w",
                "command": "-workbench.action.closeAllGroups"
        },
        {
                "key": "ctrl+k ctrl+w",
                "command": "-workbench.action.closeAllEditors"
        },
        {
                "key": "ctrl+k w",
                "command": "-workbench.action.closeEditorsInGroup"
        },
        {
                "key": "ctrl+w",
                "command": "-workbench.action.closeActiveEditor"
        },
        {
                "key": "ctrl+k u",
                "command": "-workbench.action.closeUnmodifiedEditors"
        },
        {
                "key": "ctrl+k ctrl+up",
                "command": "-workbench.action.focusAboveGroup"
        },
        {
                "key": "ctrl+k ctrl+down",
                "command": "-workbench.action.focusBelowGroup"
        },
        {
                "key": "ctrl+1",
                "command": "-workbench.action.focusFirstEditorGroup"
        },
        {
                "key": "ctrl+0",
                "command": "-workbench.action.focusSideBar"
        },
        {
                "key": "ctrl+k ctrl+left",
                "command": "-workbench.action.focusLeftGroup"
        },
        {
                "key": "ctrl+k ctrl+right",
                "command": "-workbench.action.focusRightGroup"
        },
        {
                "key": "ctrl+k enter",
                "command": "-workbench.action.keepEditor"
        },
        {
                "key": "ctrl+k down",
                "command": "-workbench.action.moveActiveEditorGroupDown"
        },
        {
                "key": "ctrl+k left",
                "command": "-workbench.action.moveActiveEditorGroupLeft"
        },
        {
                "key": "ctrl+k right",
                "command": "-workbench.action.moveActiveEditorGroupRight"
        },
        {
                "key": "ctrl+k up",
                "command": "-workbench.action.moveActiveEditorGroupUp"
        },
        {
                "key": "shift+alt+1",
                "command": "-workbench.action.moveEditorToFirstGroup"
        },
        {
                "key": "shift+alt+9",
                "command": "-workbench.action.moveEditorToLastGroup"
        },
        {
                "key": "ctrl+alt+left",
                "command": "-workbench.action.moveEditorToPreviousGroup"
        },
        {
                "key": "ctrl+alt+right",
                "command": "-workbench.action.moveEditorToNextGroup"
        },
        {
                "key": "ctrl+shift+pageup",
                "command": "-workbench.action.moveEditorLeftInGroup"
        },
        {
                "key": "ctrl+shift+pagedown",
                "command": "-workbench.action.moveEditorRightInGroup"
        },
        {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "alt+0",
                "command": "-workbench.action.lastEditorInGroup"
        },
        {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.nextEditor"
        },
        {
                "key": "ctrl+k ctrl+pagedown",
                "command": "-workbench.action.nextEditorInGroup"
        },
        {
                "key": "ctrl+pageup",
                "command": "-workbench.action.previousEditor"
        },
        {
                "key": "ctrl+k ctrl+pageup",
                "command": "-workbench.action.previousEditorInGroup"
        },
        {
                "key": "ctrl+shift+t",
                "command": "-workbench.action.reopenClosedEditor"
        },
        {
                "key": "ctrl+numpad0",
                "command": "-workbench.action.zoomReset"
        },
        {
                "key": "ctrl+k ctrl+p",
                "command": "-workbench.action.showAllEditors"
        },
        {
                "key": "ctrl+shift+e",
                "command": "-workbench.view.explorer"
        },
        {
                "key": "ctrl+shift+x",
                "command": "-workbench.view.extensions"
        },
        {
                "key": "ctrl+shift+g",
                "command": "-workbench.view.scm"
        },
        {
                "key": "ctrl+shift+f",
                "command": "-workbench.view.search",
                "when": "!searchViewletVisible"
        },
        {
                "key": "ctrl+shift+f",
                "command": "-workbench.view.search",
                "when": "!searchViewletVisible"
        },
        {
                "key": "ctrl+alt+d",
                "command": "-workbench.view.extension.objectExplorer"
        },
        {
                "key": "ctrl+\\",
                "command": "-workbench.action.splitEditor"
        },
        {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorOrthogonal"
        },
        {
                "key": "f11",
                "command": "-workbench.action.toggleFullScreen"
        },
        {
                "key": "ctrl+k ctrl+h",
                "command": "-workbench.action.output.toggleOutput"
        },
        {
                "key": "ctrl+shift+m",
                "command": "-workbench.actions.view.problems"
        },
        {
                "key": "ctrl+b",
                "command": "-workbench.action.toggleSidebarVisibility"
        },
        {
                "key": "ctrl+meta+w",
                "command": "-workbench.action.toggleTabsVisibility"
        },
        {
                "key": "shift+alt+0",
                "command": "-workbench.action.toggleEditorGroupLayout"
        },
        {
                "key": "alt+z",
                "command": "-editor.action.toggleWordWrap"
        },
        {
                "key": "ctrl+k z",
                "command": "-workbench.action.toggleZenMode"
        },
        {
                "key": "ctrl+numpad_add",
                "command": "-workbench.action.zoomIn"
        },
        {
                "key": "ctrl+shift+=",
                "command": "-workbench.action.zoomIn"
        },
        {
                "key": "ctrl+=",
                "command": "-workbench.action.zoomIn"
        },
        {
                "key": "ctrl+numpad_subtract",
                "command": "-workbench.action.zoomOut"
        },
        {
                "key": "ctrl+-",
                "command": "-workbench.action.zoomOut"
        },
        {
                "key": "ctrl+k f",
                "command": "-workbench.action.closeFolder"
        },
        {
                "key": "ctrl+shift+;",
                "command": "-breadcrumbs.focus",
                "when": "breadcrumbsPossible"
        },
        {
                "key": "ctrl+right",
                "command": "-breadcrumbs.focusNext",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "right",
                "command": "-breadcrumbs.focusNext",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "ctrl+right",
                "command": "-breadcrumbs.focusNextWithPicker",
                "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
        },
        {
                "key": "ctrl+left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "ctrl+left",
                "command": "-breadcrumbs.focusPreviousWithPicker",
                "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
        },
        {
                "key": "ctrl+enter",
                "command": "-breadcrumbs.revealFocused",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "space",
                "command": "-breadcrumbs.revealFocused",
                "when": "breadcrumbsActive && breadcrumbsVisible"
        },
        {
                "key": "ctrl+k ctrl+k",
                "command": "-editor.action.defineKeybinding",
                "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
        },
        {
                "key": "ctrl+k ctrl+f",
                "command": "-editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k ctrl+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+k ctrl+u",
                "command": "-editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.action.showHover",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+k ctrl+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly"
        },
        {
                "key": "ctrl+k ctrl+0",
                "command": "-editor.foldAll",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+/",
                "command": "-editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+1",
                "command": "-editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+2",
                "command": "-editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+3",
                "command": "-editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+4",
                "command": "-editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+5",
                "command": "-editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+6",
                "command": "-editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+7",
                "command": "-editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+[",
                "command": "-editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+l",
                "command": "-editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+j",
                "command": "-editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k ctrl+]",
                "command": "-editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled"
        },
        {
                "key": "ctrl+k f2",
                "command": "-togglePeekWidgetFocus",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
                "key": "ctrl+k ctrl+k",
                "command": "-keybindings.editor.defineKeybinding",
                "when": "inKeybindings && keybindingFocus"
        },
        {
                "key": "ctrl+k ctrl+e",
                "command": "-keybindings.editor.defineWhenExpression",
                "when": "inKeybindings && keybindingFocus"
        },
        {
                "key": "ctrl+k ctrl+w",
                "command": "-workbench.action.closeAllEditors"
        },
        {
                "key": "ctrl+k ctrl+shift+w",
                "command": "-workbench.action.closeAllGroups"
        },
        {
                "key": "ctrl+k w",
                "command": "-workbench.action.closeEditorsInGroup"
        },
        {
                "key": "ctrl+k f",
                "command": "-workbench.action.closeFolder"
        },
        {
                "key": "ctrl+k u",
                "command": "-workbench.action.closeUnmodifiedEditors"
        },
        {
                "key": "ctrl+k p",
                "command": "-workbench.action.files.copyPathOfActiveFile"
        },
        {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openFolder"
        },
        {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openLocalFolder",
                "when": "remoteFileDialogVisible"
        },
        {
                "key": "ctrl+k r",
                "command": "-workbench.action.files.revealActiveFileInWindows"
        },
        {
                "key": "ctrl+k s",
                "command": "-workbench.action.files.saveWithoutFormatting"
        },
        {
                "key": "ctrl+k o",
                "command": "-workbench.action.files.showOpenedFileInNewWindow"
        },
        {
                "key": "ctrl+k ctrl+up",
                "command": "-workbench.action.focusAboveGroup"
        },
        {
                "key": "ctrl+k ctrl+down",
                "command": "-workbench.action.focusBelowGroup"
        },
        {
                "key": "ctrl+k ctrl+left",
                "command": "-workbench.action.focusLeftGroup"
        },
        {
                "key": "ctrl+k ctrl+right",
                "command": "-workbench.action.focusRightGroup"
        },
        {
                "key": "ctrl+k enter",
                "command": "-workbench.action.keepEditor"
        },
        {
                "key": "ctrl+k ctrl+r",
                "command": "-workbench.action.keybindingsReference"
        },
        {
                "key": "ctrl+k down",
                "command": "-workbench.action.moveActiveEditorGroupDown"
        },
        {
                "key": "ctrl+k left",
                "command": "-workbench.action.moveActiveEditorGroupLeft"
        },
        {
                "key": "ctrl+k right",
                "command": "-workbench.action.moveActiveEditorGroupRight"
        },
        {
                "key": "ctrl+k up",
                "command": "-workbench.action.moveActiveEditorGroupUp"
        },
        {
                "key": "ctrl+k ctrl+q",
                "command": "-workbench.action.navigateToLastEditLocation"
        },
        {
                "key": "ctrl+k ctrl+pagedown",
                "command": "-workbench.action.nextEditorInGroup"
        },
        {
                "key": "ctrl+k ctrl+s",
                "command": "-workbench.action.openGlobalKeybindings"
        },
        {
                "key": "ctrl+k ctrl+h",
                "command": "-workbench.action.output.toggleOutput"
        },
        {
                "key": "ctrl+k ctrl+pageup",
                "command": "-workbench.action.previousEditorInGroup"
        },
        {
                "key": "ctrl+k ctrl+t",
                "command": "-workbench.action.selectTheme"
        },
        {
                "key": "ctrl+k ctrl+p",
                "command": "-workbench.action.showAllEditors"
        },
        {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorOrthogonal"
        },
        {
                "key": "ctrl+k z",
                "command": "-workbench.action.toggleZenMode"
        },
        {
                "key": "ctrl+k ctrl+m",
                "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
        },
        {
                "key": "ctrl+k c",
                "command": "-workbench.files.action.compareWithClipboard"
        },
        {
                "key": "ctrl+k d",
                "command": "-workbench.files.action.compareWithSaved"
        },
        {
                "key": "ctrl+k e",
                "command": "-workbench.files.action.focusOpenEditorsView",
                "when": "workbench.explorer.openEditorsView.active"
        },
        {
                "key": "ctrl+k v",
                "command": "-markdown.showPreviewToSide",
                "when": "editorLangId == 'markdown'"
        },
        {
                "key": "alt+1",
                "command": "-workbench.action.openEditorAtIndex1"
        },
        {
                "key": "alt+1",
                "command": "-workbench.action.openEditorAtIndex1"
        },
        {
                "key": "alt+2",
                "command": "-workbench.action.openEditorAtIndex2"
        },
        {
                "key": "alt+3",
                "command": "-workbench.action.openEditorAtIndex3"
        },
        {
                "key": "alt+4",
                "command": "-workbench.action.openEditorAtIndex4"
        },
        {
                "key": "alt+5",
                "command": "-workbench.action.openEditorAtIndex5"
        },
        {
                "key": "alt+6",
                "command": "-workbench.action.openEditorAtIndex6"
        },
        {
                "key": "alt+7",
                "command": "-workbench.action.openEditorAtIndex7"
        },
        {
                "key": "alt+8",
                "command": "-workbench.action.openEditorAtIndex8"
        },
        {
                "key": "alt+9",
                "command": "-workbench.action.openEditorAtIndex9"
        },
        {
                "key": "f12",
                "command": "-goToNextReference",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
                "key": "shift+f12",
                "command": "-goToPreviousReference",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
                "key": "f12",
                "command": "-editor.gotoNextSymbolFromResult",
                "when": "hasSymbols"
        },
        {
                "key": "f2",
                "command": "-debug.renameWatchExpression",
                "when": "watchExpressionsFocused"
        },
        {
                "key": "f2",
                "command": "-debug.setVariable",
                "when": "variablesFocused"
        },
        {
                "key": "f2",
                "command": "-remote.tunnel.label",
                "when": "tunnelViewFocus && tunnelType == 'Forwarded'"
        },
        {
                "key": "f2",
                "command": "-renameFile",
                "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
        },
        {
                "key": "f4",
                "command": "-goToNextReference",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
                "key": "shift+f4",
                "command": "-goToPreviousReference",
                "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
                "key": "ctrl+f4",
                "command": "-extension.node-debug.pickLoadedScript",
                "when": "debugType == 'node2'"
        },
        {
                "key": "f4",
                "command": "-references-view.next",
                "when": "reference-list.hasResult"
        },
        {
                "key": "shift+f4",
                "command": "-references-view.prev",
                "when": "reference-list.hasResult"
        },
        {
                "key": "alt+f5",
                "command": "-workbench.action.compareEditor.nextChange",
                "when": "textCompareEditorVisible"
        },
        {
                "key": "shift+alt+f5",
                "command": "-workbench.action.compareEditor.previousChange",
                "when": "textCompareEditorVisible"
        },
        {
                "key": "ctrl+q",
                "command": "-workbench.action.quit"
        },
        {
                "key": "ctrl+shift+v",
                "command": "-markdown-preview-enhanced.openPreview",
                "when": "editorLangId == 'markdown'"
        },
        {
                "key": "ctrl+delete",
                "command": "-deleteWordRight",
                "when": "textInputFocus && !editorReadonly"
        },
        {
                "key": "ctrl+delete",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "terminalFocus"
        },
        {
                "key": "ctrl+s",
                "command": "-workbench.action.files.save"
        },
        {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "inQuickOpen && inRecentFilesPicker"
        },
        {
                "key": "ctrl+r",
                "command": "-workbench.action.reloadWindow",
                "when": "isDevelopment"
        },
        {
                "key": "ctrl+r",
                "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "inQuickOpen && inRecentFilesPicker"
        },
        {
                "key": "ctrl+[Backquote] ctrl+t",
                "command": "-workbench.action.toggleMaximizedPanel"
        },
        {
                "key": "shift+alt+Z",
                "command": "-workbench.action.terminal.focusPrevious",
                "when": "terminalFocus"
        },
        {
                "key": "shift+alt+X",
                "command": "-workbench.action.terminal.focusNext",
                "when": "terminalFocus"
        },
        {
                "key": "alt+l alt+o",
                "command": "-extension.liveServer.goOnline",
                "when": "editorTextFocus"
        },
        {
                "key": "f9",
                "command": "-editor.debug.action.toggleBreakpoint",
                "when": "editorTextFocus"
        },
        {
                "key": "alt+k",
                "command": "-keybindings.editor.recordSearchKeys",
                "when": "inKeybindings && inKeybindingsSearch"
        },
        {
                "key": "ctrl+` ctrl+n",
                "command": "-notifications.clearAll"
        },
        {
                "key": "ctrl+k v",
                "command": "-markdown.showPreviewToSide",
                "when": "!notebookEditorFocused && editorLangId == 'markdown'"
        },
        {
                "key": "delete",
                "command": "-notification.clear",
                "when": "notificationFocus"
        },
        {
                "key": "ctrl+alt+k",
                "command": "-bookmarks.toggle",
                "when": "editorTextFocus"
        },        
        {
                "key": "ctrl+alt+l",
                "command": "-bookmarks.jumpToNext",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+alt+j",
                "command": "-bookmarks.jumpToPrevious",
                "when": "editorTextFocus"
        },
        {
                "key": "ctrl+meta+left",
                "command": "editor.action.moveCarretLeftAction"
        },
        {
                "key": "ctrl+meta+right",
                "command": "editor.action.moveCarretRightAction"
        },
        {
                "key": "shift+meta+home",
                "command": "editor.action.addCursorsToTop"
        },
        {
                "key": "ctrl+shift+F",
                "command": "toggleFindCaseSensitive",
                "when": "editorFocus"
        },
        {
                "key": "alt+c",
                "command": "-toggleFindCaseSensitive",
                "when": "editorFocus"
        },
        {
                "key": "ctrl+` ctrl+shift+v",
                "command": "editor.action.toggleColumnSelection"
        },
        {
                "key": "ctrl+meta+down",
                "command": "notebook.cell.moveDown",
                "when": "notebookEditorFocused && !inputFocus"
        },
        {
                "key": "alt+down",
                "command": "-notebook.cell.moveDown",
                "when": "notebookEditorFocused && !inputFocus"
        },
        {
                "key": "ctrl+meta+up",
                "command": "notebook.cell.moveUp",
                "when": "notebookEditorFocused && !inputFocus"
        },
        {
                "key": "alt+up",
                "command": "-notebook.cell.moveUp",
                "when": "notebookEditorFocused && !inputFocus"
        },
        {
                "key": "ctrl+shift+p",
                "command": "workbench.action.debug.continue"
        },
]